(()=>{"use strict";var n={28:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,'* {\n    margin: 0;\n    border: 0;\n    padding: 0;\n    box-sizing: border-box;\n    --purple-color: #c084fc;\n    --grey-color: #020617;\n    font-family: \'Roboto\', sans-serif;\n    /* --clr-primary: rgb(54, 112, 199);\n    --clr-light: #f4f4f4;\n    --clr-dark: #333; */\n}\n\n/* webdev */\n\n/* .todo-list {\n    --spacer: 2rem;\n    grid-area: active;\n    background: var(--clr-light);\n    color: var(--clr-dark);\n  }\n  \n  .todo-header {\n    padding: var(--spacer);\n    background: #e4e4e4;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  \n  .list-title {\n    margin: 0 1em 0 0;\n  }\n  \n  .task-count {\n    margin: 0;\n    font-size: 1rem;\n  }\n  \n  .todo-body {\n    padding: var(--spacer);\n    position: relative;\n  }\n  \n  .new-task-creator .create {\n    color: var(--clr-primary);\n  }\n  \n  [type="checkbox"] {\n    opacity: 0;\n    position: absolute;\n  }\n  \n  .task label {\n    display: flex-inline;\n    align-items: center;\n    position: relative;\n  }\n  \n  .task {\n    position: relative;\n    margin-bottom: 1.25em;\n  }\n  \n  .task::after {\n    content: "";\n    position: absolute;\n    right: 0;\n    left: 0;\n    bottom: -0.5em;\n    height: 1px;\n    background: currentColor;\n    opacity: 0.1;\n  }\n  \n  .custom-checkbox {\n    --size: 0.75em;\n    display: inline-block;\n    width: var(--size);\n    height: var(--size);\n    margin-right: var(--size);\n    cursor: pointer;\n    border: 2px solid currentColor;\n    border-radius: 50%;\n    -webkit-transform: scale(1);\n            transform: scale(1);\n    transition: -webkit-transform 300ms ease-in-out;\n    transition: transform 300ms ease-in-out;\n    transition: transform 300ms ease-in-out, -webkit-transform 300ms ease-in-out;\n  }\n  \n  .task:hover .custom-checkbox,\n  [type="checkbox"]:focus + label .custom-checkbox {\n    -webkit-transform: scale(1.2);\n            transform: scale(1.2);\n    color: var(--clr-primary);\n  }\n  \n  [type="checkbox"]:checked + label .custom-checkbox {\n    background: var(--clr-primary);\n    border-color: var(--clr-primary);\n    box-shadow: inset 0 0 0px 2px white;\n  }\n  \n  [type="checkbox"]:checked + label {\n    opacity: 0.5;\n  }\n  \n  .task label::after {\n    content: "";\n    position: absolute;\n    left: 0;\n    right: 0;\n    left: 1.5em;\n    top: 50%;\n    height: 3px;\n    background: currentColor;\n    -webkit-transform: scaleX(0);\n            transform: scaleX(0);\n    -webkit-transform-origin: right;\n            transform-origin: right;\n    transition: -webkit-transform 150ms ease-in-out;\n    transition: transform 150ms ease-in-out;\n    transition: transform 150ms ease-in-out, -webkit-transform 150ms ease-in-out;\n  }\n  \n  [type="checkbox"]:checked + label::after {\n    -webkit-transform: scaleX(1);\n            transform: scaleX(1);\n    -webkit-transform-origin: left;\n            transform-origin: left;\n  } */\n\n/* webdev */\n\n#container {\n    min-height: 100vh;\n    display: grid;\n    grid-template-rows: auto 1fr;\n    grid-template-rows: auto 1fr;\n}\n\n#main {\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n}\n\n#header {\n    background-color: var(--purple-color);\n    padding: 10px;\n    display: flex;\n    gap: 20px;\n    align-items: center;\n    font-size: 40px;\n    font-weight: 500;\n}\n\n#sidebar {\n    background-color: var(--grey-color);\n    padding: 10px;\n    padding-top: 15px;\n}\n\nul { \n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\nul > li {\n    list-style-type: none;\n    color: white;\n    font-size: 25px;\n}\n\nli > button {\n    background-color: var(--grey-color);\n    height: 60px;\n    width: 250px;\n    color: white;\n    font-size: 25px;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    cursor: pointer;\n    border-radius: 10px;\n}\n\nbutton:hover {\n    background-color: grey;\n}\n\nbutton > svg {\n    fill: white;\n    height: 50px;\n    width: 50px;\n}\n\n.projects-text {\n    margin-top: 70px;\n    margin-left: 10px;\n}\n\n.two {\n    display: flex;\n    gap: 120px;\n    align-items: center;\n}\n\n#add-project {\n    height: 40px;\n    width: 40px;\n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: var(--grey-color);\n}\n\n#add-project:hover {\n    background-color: grey;\n}\n\n#add-project > svg {\n    height: 30px;\n    width: 30px;\n}\n\nhr {\n    background: white;\n    height: 5px;\n    margin-bottom: 15px;\n}\n\ndialog[open] { \n    height: 250px;\n    width: 400px;\n    margin: auto;\n    border: 5px solid black;\n    padding: 20px;\n    border-radius: 10px;\n}\n\ndialog[open] form {\n    display: flex;\n    flex-direction: column;\n    gap: 25px;\n    align-items: center;\n}\n\ndialog[open] [id="project-name"] {\n    height: 30px;\n    padding: 5px;\n    width: 290px;\n}\n\ndialog[open] #sub-btn {\n    background-color: green;\n    color: white;\n    height: 30px;\n    width: 290px;\n    border-radius: 3px;\n    padding: 5px;\n    border: 1px solid #166534;\n}\n\n\ndialog[open] #cancel-btn {\n    background-color: red;\n    color: white;\n    height: 30px;\n    width: 290px;\n    border-radius: 3px;\n    padding: 5px;\n}\n\n[data-lists] {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    margin: 10px;\n}\n\n[data-lists] > li {\n    list-style-type: none;\n    color: white;\n    font-size: 20px;\n}\n\n.list-name {\n    position: relative;\n    display: flex;\n    align-items: center;\n}\n\n.list-name > span {\n    position: absolute;\n    font-size: 24px;\n    cursor: pointer;\n    right: 0;\n}\n\n.active-list {\n    background-color: grey;\n    border-radius: 3px;\n}\n\n#display { \n    padding: 40px;\n}\n\n.task-dialog[open] { \n  height: 400px;\n  width: 400px;\n  margin: auto;\n  border: 5px solid black;\n  padding: 20px;\n  border-radius: 10px;\n}\n\ndialog[open] #sub-task-btn {\n  background-color: green;\n  color: white;\n  height: 30px;\n  width: 290px;\n  border-radius: 3px;\n  padding: 5px;\n  border: 1px solid #166534;\n}\n\n\ndialog[open] #cancel-task-btn {\n  background-color: red;\n  color: white;\n  height: 30px;\n  width: 290px;\n  border-radius: 3px;\n  padding: 5px;\n}\n\n.task {\n  display: grid;\n  grid-template-columns: 40px repeat(3, 200px);\n}',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,SAAS;IACT,UAAU;IACV,sBAAsB;IACtB,uBAAuB;IACvB,qBAAqB;IACrB,iCAAiC;IACjC;;uBAEmB;AACvB;;AAEA,WAAW;;AAEX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAoHK;;AAEL,WAAW;;AAEX;IACI,iBAAiB;IACjB,aAAa;IACb,4BAA4B;IAC5B,4BAA4B;AAChC;;AAEA;IACI,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,qCAAqC;IACrC,aAAa;IACb,aAAa;IACb,SAAS;IACT,mBAAmB;IACnB,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,mCAAmC;IACnC,aAAa;IACb,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,qBAAqB;IACrB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,mCAAmC;IACnC,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,eAAe;IACf,mBAAmB;AACvB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,UAAU;IACV,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,mCAAmC;AACvC;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,iBAAiB;IACjB,WAAW;IACX,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,YAAY;IACZ,uBAAuB;IACvB,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,uBAAuB;IACvB,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,YAAY;IACZ,yBAAyB;AAC7B;;;AAGA;IACI,qBAAqB;IACrB,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,YAAY;AAChB;;AAEA;IACI,qBAAqB;IACrB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,eAAe;IACf,eAAe;IACf,QAAQ;AACZ;;AAEA;IACI,sBAAsB;IACtB,kBAAkB;AACtB;;AAEA;IACI,aAAa;AACjB;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,YAAY;EACZ,uBAAuB;EACvB,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,uBAAuB;EACvB,YAAY;EACZ,YAAY;EACZ,YAAY;EACZ,kBAAkB;EAClB,YAAY;EACZ,yBAAyB;AAC3B;;;AAGA;EACE,qBAAqB;EACrB,YAAY;EACZ,YAAY;EACZ,YAAY;EACZ,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,aAAa;EACb,4CAA4C;AAC9C",sourcesContent:['* {\n    margin: 0;\n    border: 0;\n    padding: 0;\n    box-sizing: border-box;\n    --purple-color: #c084fc;\n    --grey-color: #020617;\n    font-family: \'Roboto\', sans-serif;\n    /* --clr-primary: rgb(54, 112, 199);\n    --clr-light: #f4f4f4;\n    --clr-dark: #333; */\n}\n\n/* webdev */\n\n/* .todo-list {\n    --spacer: 2rem;\n    grid-area: active;\n    background: var(--clr-light);\n    color: var(--clr-dark);\n  }\n  \n  .todo-header {\n    padding: var(--spacer);\n    background: #e4e4e4;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  \n  .list-title {\n    margin: 0 1em 0 0;\n  }\n  \n  .task-count {\n    margin: 0;\n    font-size: 1rem;\n  }\n  \n  .todo-body {\n    padding: var(--spacer);\n    position: relative;\n  }\n  \n  .new-task-creator .create {\n    color: var(--clr-primary);\n  }\n  \n  [type="checkbox"] {\n    opacity: 0;\n    position: absolute;\n  }\n  \n  .task label {\n    display: flex-inline;\n    align-items: center;\n    position: relative;\n  }\n  \n  .task {\n    position: relative;\n    margin-bottom: 1.25em;\n  }\n  \n  .task::after {\n    content: "";\n    position: absolute;\n    right: 0;\n    left: 0;\n    bottom: -0.5em;\n    height: 1px;\n    background: currentColor;\n    opacity: 0.1;\n  }\n  \n  .custom-checkbox {\n    --size: 0.75em;\n    display: inline-block;\n    width: var(--size);\n    height: var(--size);\n    margin-right: var(--size);\n    cursor: pointer;\n    border: 2px solid currentColor;\n    border-radius: 50%;\n    -webkit-transform: scale(1);\n            transform: scale(1);\n    transition: -webkit-transform 300ms ease-in-out;\n    transition: transform 300ms ease-in-out;\n    transition: transform 300ms ease-in-out, -webkit-transform 300ms ease-in-out;\n  }\n  \n  .task:hover .custom-checkbox,\n  [type="checkbox"]:focus + label .custom-checkbox {\n    -webkit-transform: scale(1.2);\n            transform: scale(1.2);\n    color: var(--clr-primary);\n  }\n  \n  [type="checkbox"]:checked + label .custom-checkbox {\n    background: var(--clr-primary);\n    border-color: var(--clr-primary);\n    box-shadow: inset 0 0 0px 2px white;\n  }\n  \n  [type="checkbox"]:checked + label {\n    opacity: 0.5;\n  }\n  \n  .task label::after {\n    content: "";\n    position: absolute;\n    left: 0;\n    right: 0;\n    left: 1.5em;\n    top: 50%;\n    height: 3px;\n    background: currentColor;\n    -webkit-transform: scaleX(0);\n            transform: scaleX(0);\n    -webkit-transform-origin: right;\n            transform-origin: right;\n    transition: -webkit-transform 150ms ease-in-out;\n    transition: transform 150ms ease-in-out;\n    transition: transform 150ms ease-in-out, -webkit-transform 150ms ease-in-out;\n  }\n  \n  [type="checkbox"]:checked + label::after {\n    -webkit-transform: scaleX(1);\n            transform: scaleX(1);\n    -webkit-transform-origin: left;\n            transform-origin: left;\n  } */\n\n/* webdev */\n\n#container {\n    min-height: 100vh;\n    display: grid;\n    grid-template-rows: auto 1fr;\n    grid-template-rows: auto 1fr;\n}\n\n#main {\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n}\n\n#header {\n    background-color: var(--purple-color);\n    padding: 10px;\n    display: flex;\n    gap: 20px;\n    align-items: center;\n    font-size: 40px;\n    font-weight: 500;\n}\n\n#sidebar {\n    background-color: var(--grey-color);\n    padding: 10px;\n    padding-top: 15px;\n}\n\nul { \n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\nul > li {\n    list-style-type: none;\n    color: white;\n    font-size: 25px;\n}\n\nli > button {\n    background-color: var(--grey-color);\n    height: 60px;\n    width: 250px;\n    color: white;\n    font-size: 25px;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    cursor: pointer;\n    border-radius: 10px;\n}\n\nbutton:hover {\n    background-color: grey;\n}\n\nbutton > svg {\n    fill: white;\n    height: 50px;\n    width: 50px;\n}\n\n.projects-text {\n    margin-top: 70px;\n    margin-left: 10px;\n}\n\n.two {\n    display: flex;\n    gap: 120px;\n    align-items: center;\n}\n\n#add-project {\n    height: 40px;\n    width: 40px;\n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: var(--grey-color);\n}\n\n#add-project:hover {\n    background-color: grey;\n}\n\n#add-project > svg {\n    height: 30px;\n    width: 30px;\n}\n\nhr {\n    background: white;\n    height: 5px;\n    margin-bottom: 15px;\n}\n\ndialog[open] { \n    height: 250px;\n    width: 400px;\n    margin: auto;\n    border: 5px solid black;\n    padding: 20px;\n    border-radius: 10px;\n}\n\ndialog[open] form {\n    display: flex;\n    flex-direction: column;\n    gap: 25px;\n    align-items: center;\n}\n\ndialog[open] [id="project-name"] {\n    height: 30px;\n    padding: 5px;\n    width: 290px;\n}\n\ndialog[open] #sub-btn {\n    background-color: green;\n    color: white;\n    height: 30px;\n    width: 290px;\n    border-radius: 3px;\n    padding: 5px;\n    border: 1px solid #166534;\n}\n\n\ndialog[open] #cancel-btn {\n    background-color: red;\n    color: white;\n    height: 30px;\n    width: 290px;\n    border-radius: 3px;\n    padding: 5px;\n}\n\n[data-lists] {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    margin: 10px;\n}\n\n[data-lists] > li {\n    list-style-type: none;\n    color: white;\n    font-size: 20px;\n}\n\n.list-name {\n    position: relative;\n    display: flex;\n    align-items: center;\n}\n\n.list-name > span {\n    position: absolute;\n    font-size: 24px;\n    cursor: pointer;\n    right: 0;\n}\n\n.active-list {\n    background-color: grey;\n    border-radius: 3px;\n}\n\n#display { \n    padding: 40px;\n}\n\n.task-dialog[open] { \n  height: 400px;\n  width: 400px;\n  margin: auto;\n  border: 5px solid black;\n  padding: 20px;\n  border-radius: 10px;\n}\n\ndialog[open] #sub-task-btn {\n  background-color: green;\n  color: white;\n  height: 30px;\n  width: 290px;\n  border-radius: 3px;\n  padding: 5px;\n  border: 1px solid #166534;\n}\n\n\ndialog[open] #cancel-task-btn {\n  background-color: red;\n  color: white;\n  height: 30px;\n  width: 290px;\n  border-radius: 3px;\n  padding: 5px;\n}\n\n.task {\n  display: grid;\n  grid-template-columns: 40px repeat(3, 200px);\n}'],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(i[A]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],s=0;s<n.length;s++){var A=n[s],c=r.base?A[0]+r.base:A[0],l=a[c]||0,d="".concat(c," ").concat(l);a[c]=l+1;var p=t(d),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:m,references:1})}i.push(d)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var A=r(n,o),c=0;c<a.length;c++){var l=t(a[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),s=t(565),A=t.n(s),c=t(216),l=t.n(c),d=t(589),p=t.n(d),u=t(28),m={};m.styleTagTransform=p(),m.setAttributes=A(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const g=document.getElementById("add-project"),f=document.querySelector(".project-dialog"),b=document.getElementById("project-form"),h=document.getElementById("cancel-btn"),x=document.getElementById("project-name"),C=document.querySelector("[data-lists]"),B=document.querySelector("[data-list-display-container]"),k=document.querySelector("[data-list-title]"),I=document.querySelector("[data-list-count]"),y=document.querySelector("[data-tasks]"),v=document.getElementById("task-template"),w=document.querySelector("[data-clear-complete-tasks-button]"),E=document.querySelector(".task-dialog"),Y=document.getElementById("task-form"),S=document.getElementById("cancel-task-btn"),Z=document.getElementById("due-date"),j=document.querySelector("select"),q=document.getElementById("add-new-task"),z=document.getElementById("user-task-name"),L="tasks.lists",T="task.selectedListId";let X=JSON.parse(localStorage.getItem(L))||[],W=localStorage.getItem(T);function N(){localStorage.setItem(L,JSON.stringify(X)),localStorage.setItem(T,W)}function M(){N(),U()}function R(n){for(;n.firstChild;)n.removeChild(n.firstChild)}function U(){R(C),X.forEach((n=>{const e=document.createElement("li");e.dataset.listId=n.id,e.classList.add("list-name"),e.innerText=n.name;var t=document.createElement("span");t.setAttribute("class","del-btn"),t.appendChild(document.createTextNode("x")),e.appendChild(t),C.appendChild(e),t.addEventListener("click",(n=>{X=X.filter((n=>n.id!==t.parentNode.dataset.listId)),B.style.display="none",M()}))}))}function O(n){return{id:Date.now().toString(),name:n,tasks:[]}}function D(n){n.tasks.forEach((n=>{const e=document.importNode(v.content,!0),t=e.querySelector("input");t.id=n.id,t.checked=n.complete;const r=e.querySelector(".name");r.htmlFor=n.id,r.append(n.name),e.querySelector(".due").append(n.due),e.querySelector(".pri").append(n.priority),y.appendChild(e)}))}function J(n){const e=n.tasks.filter((n=>!n.complete)).length,t=1===e?"task":"tasks";I.innerText=`${e} ${t} remaining`}g.addEventListener("click",(()=>{f.showModal()})),f.addEventListener("click",(n=>{const e=f.getBoundingClientRect();(n.clientX<e.left||n.clientX>e.right||n.clientY<e.top||n.clientY>e.bottom)&&(b.reset(),f.close())})),b.addEventListener("submit",(n=>{n.preventDefault();const e=O(x.value);X.push(e),M(),b.reset(),f.close()})),h.addEventListener("click",(()=>{b.reset(),f.close()})),O(),M(),C.addEventListener("click",(n=>{if("li"===n.target.tagName.toLowerCase()){W=n.target.dataset.listId;const e=X.find((n=>n.id===W));B.style.display="",k.innerText=e.name,J(e),R(y),D(e),w.addEventListener("click",(n=>{e.tasks=e.tasks.filter((n=>!n.complete)),J(e),R(y),D(e),M()}))}})),B.style.display="none",U(),y.addEventListener("click",(n=>{if("input"===n.target.tagName.toLowerCase()){const e=X.find((n=>n.id===W));e.tasks.find((e=>e.id===n.target.id)).complete=n.target.checked,N(),J(e)}})),E.addEventListener("click",(n=>{const e=E.getBoundingClientRect();(n.clientX<e.left||n.clientX>e.right||n.clientY<e.top||n.clientY>e.bottom)&&(Y.reset(),E.close())})),S.addEventListener("click",(()=>{Y.reset(),E.close()})),Y.addEventListener("submit",(n=>{n.preventDefault();const e=function(n,e,t){return{id:Date.now().toString(),name:n,complete:!1,due:e,priority:t}}(z.value,Z.value,j.value),t=X.find((n=>n.id===W));t.tasks.push(e),E.close(),J(t),R(y),D(t),M()})),q.addEventListener("click",(n=>{n.preventDefault(),E.showModal()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,